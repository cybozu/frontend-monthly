{"componentChunkName":"component---src-post-template-js","path":"/posts/2021-01","result":{"data":{"markdownRemark":{"html":"<h3 id=\"javascript-アンケート周り\" style=\"position:relative;\"><a href=\"#javascript-%E3%82%A2%E3%83%B3%E3%82%B1%E3%83%BC%E3%83%88%E5%91%A8%E3%82%8A\" aria-label=\"javascript アンケート周り permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JavaScript アンケート周り</h3>\n<ul>\n<li>共有者: @__sakito__</li>\n<li>\n<p><a href=\"https://2020.stateofjs.com/en-US/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">State of JS 2020</a></p>\n<ul>\n<li><a href=\"https://2020.stateofjs.com/ja-JP/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">日本語訳</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://risingstars.js.org/2020/en\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">2020 JavaScript Rising Stars</a></p>\n<ul>\n<li><a href=\"https://risingstars.js.org/2020/ja\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">日本語訳</a></li>\n</ul>\n</li>\n</ul>\n<p>両方とも 2020 年の流れを把握するのに使えそうです。</p>\n<p>State of JS は、ビルドが esbuild や sbowpack、フレームワークは引き続き svelte に興味持ってる人が多かったです。\nしかし実際に使用してるものは、webpack などになっており、新しいものはまだプロダクションで使用するには踏み込めない印象。\n各項目で色々な人が 2020 年の個人的ベストを紹介してるのが面白かった、<a href=\"https://github.com/atlassian/changesets\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">changesets</a>、<a href=\"https://insomnia.rest/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Insomnia</a>、<a href=\"https://redwoodjs.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Redwood</a>など知らないものを知れました。</p>\n<p>2020 JavaScript Rising Stars は、あくまでスター数なので State of JS 2020 と見比べて世間がどこに注目しているか照らし合わせるとよさそうです。\n各セクションで説明もあるので、なぜスター数が増えたのかもわかりやすいです。</p>\n<hr>\n<h3 id=\"dont-use-inverted-color-cues-on-toggle-buttons\" style=\"position:relative;\"><a href=\"#dont-use-inverted-color-cues-on-toggle-buttons\" aria-label=\"dont use inverted color cues on toggle buttons permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://uxmovement.com/buttons/dont-use-inverted-color-cues-on-toggle-buttons/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Don’t Use Inverted Color Cues on Toggle Buttons</a></h3>\n<ul>\n<li>共有者: @pirosikick</li>\n</ul>\n<p>トグルボタンでボタンの文字色と背景色を反転させた ON・OFF ボタンを作りがちだが、\n色のコントラスト比が同じになるのでどちらが ON で OFF なのかわからず誤操作が増えがちなので気をつけなはれや、という内容。\nブログの画像を見ると分かりやすいですが、色の反転の代わりに奥行きで ON/OFF を表現するといいよとのことです。\n最近、tailwind.css を使っていて悪い例と同じようなことをしていたので、タイムリーで参考になりました。</p>\n<hr>\n<h3 id=\"classi-にフロントエンドエキスパートチームを作った話\" style=\"position:relative;\"><a href=\"#classi-%E3%81%AB%E3%83%95%E3%83%AD%E3%83%B3%E3%83%88%E3%82%A8%E3%83%B3%E3%83%89%E3%82%A8%E3%82%AD%E3%82%B9%E3%83%91%E3%83%BC%E3%83%88%E3%83%81%E3%83%BC%E3%83%A0%E3%82%92%E4%BD%9C%E3%81%A3%E3%81%9F%E8%A9%B1\" aria-label=\"classi にフロントエンドエキスパートチームを作った話 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://tech.classi.jp/entry/2021/01/18/103110\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Classi にフロントエンドエキスパートチームを作った話</a></h3>\n<ul>\n<li>共有者: @nakajmg</li>\n</ul>\n<p>Classi さんがフロントエンドエキスパートチームを作った話。\n弊チームを参考にしてくれたとのことで、私達の活動が界隈に影響を与えられていると思うと嬉しいですね。</p>\n<p>記事中では<a href=\"https://giamir.com/frontendops\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">FrontendOps</a>について触れており、フロントエンドの運用が開発者だけの関心事ではなく、チーム全員にとって重要であると説明しています。\n今後ますますフロントエンドの運用は重要な関心事となっていくと思いますので、弊フロントエンドエキスパートチームとしても真摯に向き合って行きたいです。</p>\n<hr>\n<h3 id=\"front-end-performance-checklist-2021--smashing-magazine\" style=\"position:relative;\"><a href=\"#front-end-performance-checklist-2021--smashing-magazine\" aria-label=\"front end performance checklist 2021  smashing magazine permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://www.smashingmagazine.com/2021/01/front-end-performance-2021-free-pdf-checklist/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Front-End Performance Checklist 2021 — Smashing Magazine</a></h3>\n<ul>\n<li>共有者: @shisama</li>\n</ul>\n<p>パフォーマンスに関するチェックリストです。<br>\n77 個のチェックリストがありますが、長大なので挫折しそうな人はサマライズされている <a href=\"https://www.dropbox.com/s/34noajrbm324iai/performance-checklist-1.4.pdf\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">PDF 版</a> を読んでみて気になるところは記事の方を読んでみるのが良いかと思います。</p>\n<p>記事の最後には<strong>Quic Wins</strong>として 1 時間で改善できる 17 個のことを記事中からピックアップされているので、まずはこれからはじめるのも良さそうです。<br>\n個人的には「パフォーマンスの文化を作る」が最初に来ているところがいいと思いました。</p>\n<p>パフォーマンスに関連する話で今月知ったものもあわせて紹介しておきます。</p>\n<p>この記事の中でも CoreWebVitals を使って計測する話があり、DevTools で計測したり、<a href=\"https://chrome.google.com/webstore/detail/web-vitals/ahfhijdlegdabablpippeagghigmibma?hl=en\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Chrome 拡張</a>を使っている人が多いと思いますが、Chrome 90 からは Experimental ですが Chrome 本体でもメトリクスを常に監視できるようになるようです。<br>\n<a href=\"https://addyosmani.com/blog/performance-hud/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">AddyOsmani.com - A Performance Heads-Up Display (HUD) for Chrome</a></p>\n<p>JS のサイズについては、モダンブラウザで使える JS の構文を使うことでバンドルサイズを減らせると紹介されています。<br>\nJS のネイティブに置き換えることでどれくらいバンドルサイズを減らせるかをチェックするツールがあるので、試してみるといいかもしれません。<br>\n<a href=\"https://estimator.dev/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">EStimator.dev: the modern JavaScript savings calculator</a></p>\n<hr>\n<h3 id=\"agenda-for-the-80th-meeting-of-ecma-tc39\" style=\"position:relative;\"><a href=\"#agenda-for-the-80th-meeting-of-ecma-tc39\" aria-label=\"agenda for the 80th meeting of ecma tc39 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/tc39/agendas/blob/master/2021/01.md\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Agenda for the 80th meeting of Ecma TC39</a></h3>\n<p>TC39 の１月のミーティングのアジェンダです。25 日~28 日にかけて行われます。</p>\n<p>このミーティングでは多くのプロポーザルについての議論が行われる予定です。</p>\n<h4 id=\"intl-系ecma402のプロポーザル\" style=\"position:relative;\"><a href=\"#intl-%E7%B3%BBecma402%E3%81%AE%E3%83%97%E3%83%AD%E3%83%9D%E3%83%BC%E3%82%B6%E3%83%AB\" aria-label=\"intl 系ecma402のプロポーザル permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/tc39/ecma402\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Intl 系(ECMA402)</a>のプロポーザル</h4>\n<ul>\n<li><a href=\"https://github.com/tc39/proposal-intl-DateTimeFormat-formatRange\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Intl.DateTimeFormat.prototype.formatRange</a> for Stage 4</li>\n<li><a href=\"https://github.com/tc39/proposal-intl-locale-info\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Intl Locale Info</a> for stage 2</li>\n<li><a href=\"https://github.com/tc39/intl-displaynames-v2\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Intl DisplayNames</a> v2 for stage 2</li>\n<li><a href=\"https://github.com/Louis-Aime/proposal-intl-eradisplay\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">eraDisplay option for Intl.DateTimeFormat</a> for stage 1</li>\n<li><a href=\"https://github.com/longlho/proposal-intl-localematcher\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Intl LocaleMatcher</a> for Stage 1</li>\n<li><a href=\"https://github.com/FrankYFTang/proposal-intl-extend-timezonename/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Extend TimeZoneName Option Proposal</a> for stage 1</li>\n</ul>\n<h4 id=\"新しい構文を追加するプロポーザル\" style=\"position:relative;\"><a href=\"#%E6%96%B0%E3%81%97%E3%81%84%E6%A7%8B%E6%96%87%E3%82%92%E8%BF%BD%E5%8A%A0%E3%81%99%E3%82%8B%E3%83%97%E3%83%AD%E3%83%9D%E3%83%BC%E3%82%B6%E3%83%AB\" aria-label=\"新しい構文を追加するプロポーザル permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>新しい構文を追加するプロポーザル</h4>\n<ul>\n<li>⭐<a href=\"https://github.com/tc39/proposal-class-static-block\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Class static Initialization Blocks</a> for Stage 3</li>\n<li>⭐<a href=\"https://github.com/tc39/proposal-js-module-blocks\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">JS Module Blocks</a> for stage 2</li>\n<li>⭐<a href=\"https://github.com/bakkot/do-expressions-v2\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">do expressions</a> for stage 2</li>\n<li><a href=\"https://github.com/bakkot/proposal-async-do-expressions\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">async do expressions</a> for stage 1</li>\n<li><a href=\"https://github.com/mathiasbynens/proposal-regexp-set-notation\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Adopting Unicode behavior for set notation in regular expressions</a></li>\n<li><a href=\"https://github.com/codehag/proposal-lazy-import\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">defer module import eval</a> for stage 1</li>\n</ul>\n<h4 id=\"新しい-api-を追加するプロポーザル\" style=\"position:relative;\"><a href=\"#%E6%96%B0%E3%81%97%E3%81%84-api-%E3%82%92%E8%BF%BD%E5%8A%A0%E3%81%99%E3%82%8B%E3%83%97%E3%83%AD%E3%83%9D%E3%83%BC%E3%82%B6%E3%83%AB\" aria-label=\"新しい api を追加するプロポーザル permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>新しい API を追加するプロポーザル</h4>\n<ul>\n<li>⭐<a href=\"https://github.com/tc39/proposal-relative-indexing-method\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Relative indexing method</a> for stage 4</li>\n<li><a href=\"https://github.com/tc39/proposal-array-is-template-object\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Array.isTemplateObject</a> for stage 3</li>\n<li><a href=\"https://github.com/tc39/proposal-temporal\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Temporal</a> updates</li>\n<li><a href=\"https://github.com/tc39/proposal-resizablearraybuffer\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ResizableArrayBuffer and GrowableSharedArrayBuffer</a> updates</li>\n<li><a href=\"https://github.com/tc39/proposal-realms\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Realms</a> update</li>\n<li><a href=\"https://github.com/Kingwl/proposal-array-find-from-last\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Array find from last</a> for stage 1</li>\n</ul>\n<h4 id=\"その他\" style=\"position:relative;\"><a href=\"#%E3%81%9D%E3%81%AE%E4%BB%96\" aria-label=\"その他 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>その他</h4>\n<ul>\n<li><a href=\"https://github.com/tc39/proposal-private-fields-in-in\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Ergonomic brand checks for private fields</a> for stage 3</li>\n<li><a href=\"https://github.com/tc39/proposal-dynamic-code-brand-checks\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Dynamic code brand checks</a> for stage 2</li>\n<li><a href=\"https://github.com/hax/proposal-class-brand-check\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">class brand check</a> for stage 1</li>\n<li>⭐<a href=\"https://github.com/tc39/proposal-json-modules\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">JSON modules</a> for stage 3</li>\n<li><a href=\"https://github.com/tc39/proposal-regexp-match-indices\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">RegExp Match Indices</a> update</li>\n</ul>\n<p>数が多くて全部は紹介しきれないので、僕が個人的に気になったもの、多くの JavaScript 開発者にとって影響が大きそうなもの、かつステージが進みそうなものを紹介していきます。</p>\n<details>\n  <div>\n<h4 id=\"class-static-initilization-blocks-for-stage-3\" style=\"position:relative;\"><a href=\"#class-static-initilization-blocks-for-stage-3\" aria-label=\"class static initilization blocks for stage 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Class static initilization Blocks for Stage 3</h4>\n<p><a href=\"https://github.com/tc39/proposal-class-static-block\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/tc39/proposal-class-static-block</a></p>\n<p>これは、クラスのスタティックプロパティの初期化を行うことができるブロックの構文を導入するプロポーザルです。</p>\n<p>今のクラスの仕様だと、何かしらの外部の計算に依存してスタティックプロパティを決定したいとき、クラスの中だけでは不可能でした。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">C</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">static</span> x <span class=\"token operator\">=</span> <span class=\"token operator\">...</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">static</span> y<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token function\">doSomething</span><span class=\"token punctuation\">(</span><span class=\"token constant\">C</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token constant\">C</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// doSomething が失敗したときのフォールバック</span>\n  <span class=\"token constant\">C</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token operator\">...</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>このプロポーザルで追加するクラススタティックブロックを使うと、このような処理をクラス内のブロックに書くことができます。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">C</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">static</span> x <span class=\"token operator\">=</span> <span class=\"token operator\">...</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">static</span> y<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">static</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token function\">doSomething</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token operator\">...</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"js-module-blocks-for-stage-2\" style=\"position:relative;\"><a href=\"#js-module-blocks-for-stage-2\" aria-label=\"js module blocks for stage 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JS Module Blocks for Stage 2</h4>\n<p><a href=\"https://github.com/tc39/proposal-js-module-blocks\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/tc39/proposal-js-module-blocks</a></p>\n<p>ちょっと前のマンスリーでも紹介しました。</p>\n<p>インラインでモジュールを定義できる新しい式の構文を導入するプロポーザル。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> moduleBlock <span class=\"token operator\">=</span> module <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">let</span> y <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">let</span> moduleExports <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span>moduleBlock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>moduleExports<span class=\"token punctuation\">.</span>y <span class=\"token operator\">===</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>module 式で作ったモジュールは、Worker コンストラクタにそのまま渡すことができます。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> workerCode <span class=\"token operator\">=</span> module <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">onmessage</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> mod <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span>mod<span class=\"token punctuation\">.</span><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> worker <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Worker</span><span class=\"token punctuation\">(</span>workerCode<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>type<span class=\"token operator\">:</span> <span class=\"token string\">\"module\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nworker<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmessage</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nworker<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span>module <span class=\"token punctuation\">{</span> <span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"hello!\"</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>著者のツイートからすでにステージ 2 にあがっているようです。</p>\n<h4 id=\"do-expression-for-stage-2\" style=\"position:relative;\"><a href=\"#do-expression-for-stage-2\" aria-label=\"do expression for stage 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">do</code> expression for Stage 2</h4>\n<p><a href=\"https://github.com/bakkot/do-expressions-v2\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/bakkot/do-expressions-v2</a></p>\n<p>長らく Stage 1 のままだった <code class=\"language-text\">do</code> expression です。</p>\n<p>ブロックの中で最後の評価されたものが式の結果になります。また、変数のスコープは <code class=\"language-text\">do</code> のブロックの中で閉じます。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> x <span class=\"token operator\">=</span> <span class=\"token keyword\">do</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> tmp <span class=\"token operator\">=</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  tmp <span class=\"token operator\">*</span> tmp <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>読みにくいネストした三項演算子の代わりに <code class=\"language-text\">if else</code> で書けるようになります。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> x <span class=\"token operator\">=</span> <span class=\"token keyword\">do</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">bar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">g</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">h</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>特に、JSX などの中に書くと便利です。</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nav</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Home</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token punctuation\">{</span><span class=\"token keyword\">do</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>loggedIn<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">LogoutButton</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">LoginButton</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nav</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4 id=\"relative-indexing-method\" style=\"position:relative;\"><a href=\"#relative-indexing-method\" aria-label=\"relative indexing method permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Relative indexing method</h4>\n<p><a href=\"https://github.com/tc39/proposal-relative-indexing-method\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/tc39/proposal-relative-indexing-method</a></p>\n<p><code class=\"language-text\">Array.prototype.at</code> のことです。</p>\n<p>配列の後ろから要素を取得するのが楽になります。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"c\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"d\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\narr<span class=\"token punctuation\">.</span><span class=\"token function\">at</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"a\"</span>\narr<span class=\"token punctuation\">.</span><span class=\"token function\">at</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"b\"</span>\narr<span class=\"token punctuation\">.</span><span class=\"token function\">at</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"d\"</span></code></pre></div>\n<h4 id=\"json-modules-for-stage-3\" style=\"position:relative;\"><a href=\"#json-modules-for-stage-3\" aria-label=\"json modules for stage 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JSON modules for Stage 3</h4>\n<p><a href=\"https://github.com/tc39/proposal-json-modules\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/tc39/proposal-json-modules</a></p>\n<p>JSON を JavaScript からモジュールとして読み込むときの挙動についての仕様です。</p>\n<p>もともとは、<a href=\"https://github.com/tc39/proposal-import-assertions/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Import Assertions</a>の一部でしたが別の仕様として切り出されました。</p>\n<p>ブラウザ上では JSON modules を使う場合は、セキュリティ上の都合から Import Assertions の構文を使って import する必要があります。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> json <span class=\"token keyword\">from</span> <span class=\"token string\">\"./foo.json\"</span> <span class=\"token keyword\">assert</span> <span class=\"token punctuation\">{</span> type<span class=\"token operator\">:</span> <span class=\"token string\">\"json\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"foo.json\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> assert<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> type<span class=\"token operator\">:</span> <span class=\"token string\">\"json\"</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>ただ、これはブラウザ特有のセキュリティの問題なので、JSON modules を import するときにアサートを必須にするかどうかは各ランタイムに委ねられています(Import Assertions の構文を解釈できる必要はある)。</p>\n<p>次のような JSON を考えます。</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"foo\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ふー\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"bar\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ばー\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>これを JavaScript から import するときは default export として解釈します。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> json <span class=\"token keyword\">from</span> <span class=\"token string\">\"./foobar.json\"</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">.</span>foo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ふー</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">.</span>bar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ばー</span></code></pre></div>\n<p>JSON のキーには JavaScript の識別子として妥当でないものを使用できるため、named export はサポートされていません。</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"32\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"さんじゅうに\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 数字は識別子として認められていない</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> <span class=\"token number\">32</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"numbers.json\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n  </div>\n</details>\n<hr>\n<h3 id=\"enabling-popups---microsoftedgemsedgeexplainers\" style=\"position:relative;\"><a href=\"#enabling-popups---microsoftedgemsedgeexplainers\" aria-label=\"enabling popups   microsoftedgemsedgeexplainers permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/MicrosoftEdge/MSEdgeExplainers/blob/main/Popup/explainer.md\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Enabling Popups - MicrosoftEdge/MSEdgeExplainers</a></h3>\n<ul>\n<li>共有者: @zaki___yama</li>\n</ul>\n<p><a href=\"https://cybozu.github.io/frontend-monthly/posts/2020-08\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">以前の Frontend Monthly</a>で \"<a href=\"https://github.com/MicrosoftEdge/MSEdgeExplainers/blob/main/ControlUICustomization/explainer.md\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Enabling Custom Control UI</a>\" というプロポーザルを紹介したんですが、その続編みたいなプロポーザルです。\nといってもその後の動向を熱心にウォッチしてたわけではなく、例によって Edge の PM の<a href=\"https://twitter.com/soMelanieSaid/status/1352324867941568512?s=20\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ツイート</a> から知りました。</p>\n<h4 id=\"概要\" style=\"position:relative;\"><a href=\"#%E6%A6%82%E8%A6%81\" aria-label=\"概要 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>概要</h4>\n<ul>\n<li><code class=\"language-text\">&lt;popup></code> という新しい HTML 要素の提案です</li>\n<li>他の HTML 要素と同じようにマークアップを書き、 <code class=\"language-text\">show()/hide()</code> メソッドで表示／非表示を制御します</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">aria-haspopup</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">aria-controls</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>menuPopup<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>menuButton<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  Menu\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>popup</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>menuPopup<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">role</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>menu<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">anchor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>menuButton<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token comment\">&lt;!-- Markup for menuitems goes here --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>popup</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"menuButton\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"menuPopup\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">popup</code> は独立した要素の可能性もあるし、combobox のようなより大きな複合的な(composited)コンポーネントの一部の可能性もあります</li>\n</ul>\n<h4 id=\"面白いと思ったポイントいくつか\" style=\"position:relative;\"><a href=\"#%E9%9D%A2%E7%99%BD%E3%81%84%E3%81%A8%E6%80%9D%E3%81%A3%E3%81%9F%E3%83%9D%E3%82%A4%E3%83%B3%E3%83%88%E3%81%84%E3%81%8F%E3%81%A4%E3%81%8B\" aria-label=\"面白いと思ったポイントいくつか permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>面白いと思ったポイントいくつか</h4>\n<ul>\n<li>\n<p>popup は以下の挙動をする。これらの挙動をプロポーザル中では \"light dismiss\" と表現している</p>\n<ul>\n<li>ユーザーが Escape キーを押した</li>\n<li><code class=\"language-text\">popup</code> またはそのアンカー要素の layout が変更された</li>\n<li>フォーカスが外れた</li>\n</ul>\n</li>\n<li>[<a href=\"https://github.com/MicrosoftEdge/MSEdgeExplainers/blob/main/Popup/explainer.md#anchored-positioning\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Anchored positioning</a>] popup の位置を他の要素に紐付けられるよう、CSS anchored positioning scheme という別のプロポーザルも策定予定。ただ現状も <code class=\"language-text\">anchor</code> 属性を指定すると別の要素に紐付けることができる</li>\n<li>\n<p>[<a href=\"https://github.com/MicrosoftEdge/MSEdgeExplainers/blob/main/Popup/explainer.md#alternate-solutions-considered\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Alternate Solutions Considered</a>] 別のソリューションとして <code class=\"language-text\">&lt;dialog></code> 要素の拡張も考えたけど、popup と dialog で期待する機能が違うのでやめた。たとえば</p>\n<ul>\n<li>popup は軽量な UI で、ユーザーが他の UI を操作したときなどに自動的に消えてほしいけど、dialog は一般的にユーザーが明示的に閉じないと消えない</li>\n<li>popup は一度に 1 つしか表示できないが、dialog はそうとは限らない</li>\n<li>dialog を表示したとき popup は非表示になるべきだけど、逆はそうとは限らない</li>\n</ul>\n</li>\n<li>[<a href=\"https://github.com/MicrosoftEdge/MSEdgeExplainers/blob/main/Popup/explainer.md#areas-for-exploration\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Areas for exploration</a>] 表示・非表示を手続き的に書かないといけないのかーと思ったけど、宣言的に書けるような属性も検討するかも</li>\n</ul>\n<hr>\n<h3 id=\"how-we-improved-smashingmag-performance\" style=\"position:relative;\"><a href=\"#how-we-improved-smashingmag-performance\" aria-label=\"how we improved smashingmag performance permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://www.smashingmagazine.com/2021/01/smashingmag-performance-case-study/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">How We Improved SmashingMag Performance</a></h3>\n<ul>\n<li>共有者: @b4h0-c4t</li>\n</ul>\n<h4 id=\"一行まとめ\" style=\"position:relative;\"><a href=\"#%E4%B8%80%E8%A1%8C%E3%81%BE%E3%81%A8%E3%82%81\" aria-label=\"一行まとめ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>一行まとめ</h4>\n<p>JAMStack 上で React を使って構築した Web サイトのパフォーマンスを最適化し、Core Web Vitals のメトリクスを改善した手法の話。</p>\n<h4 id=\"序文\" style=\"position:relative;\"><a href=\"#%E5%BA%8F%E6%96%87\" aria-label=\"序文 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>序文</h4>\n<p>Web パフォーマンスについての話の多くはオーバーホールから始まる。\n一方で、時間経過による機能追加の結果コードの断片化やサードパーティスクリプトの読み込み高速化のための \"fourth-party\" スクリプトが入ってしまう。</p>\n<p>実際、smashing 社もパフォーマンスへの目標をしばしば忘れていた結果、Lighthouse スコアがボロボロになっていた。</p>\n<h4 id=\"thats-where-we-were\" style=\"position:relative;\"><a href=\"#thats-where-we-were\" aria-label=\"thats where we were permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>That’s Where We Were</h4>\n<p>対象サービス(おそらくブログ)は JAMStack 上で Hugo + React を用いて構築されている。\n記事のビルドには 6 分近く掛かり、CSS の注入、Webpack のコード分割、広告・昨日の動的挿入 RSS 生成、エッジに配信するための AB テスト等のビルドプロセスが走っていた。</p>\n<h4 id=\"identifying-bottlenecks\" style=\"position:relative;\"><a href=\"#identifying-bottlenecks\" aria-label=\"identifying bottlenecks permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Identifying Bottlenecks</h4>\n<p>ボトルネックを特定するためにいくつかのパフォーマンス評価を実施した。</p>\n<p>LCP の結果、5-9 月あたりからパフォーマンスの悪化が見られた。\nこの時期はナビゲーションバーのリリースを実施していたことから、この指標からボトルネックを特定するのは容易だった。</p>\n<p>サービスのリクエストマップを調べた当初は特に問題はなさそうだった。\nしかし、特定の条件下で DOM のサイズが爆発的に大きくなることを発見した。\n主要なページのみを計測対象とした結果発見できていなかったが、埋め込み等が多く用いられている記事を計測した際は膨大なリクエストが行き来していることがわかった。</p>\n<h4 id=\"やったこと\" style=\"position:relative;\"><a href=\"#%E3%82%84%E3%81%A3%E3%81%9F%E3%81%93%E3%81%A8\" aria-label=\"やったこと permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>やったこと</h4>\n<ul>\n<li>head の読み込み順序改善</li>\n<li>特に重要な CSS の手動生成</li>\n<li>Web フォントの読込変更</li>\n<li>モノリシックな JS の特定と分解</li>\n<li>サードパーティコンテンツの適切な割り当て(レイアウト)</li>\n<li>体験の向上(AVIF 生成や著作画像のプリロード等)</li>\n</ul>\n<h4 id=\"どうなったか\" style=\"position:relative;\"><a href=\"#%E3%81%A9%E3%81%86%E3%81%AA%E3%81%A3%E3%81%9F%E3%81%8B\" aria-label=\"どうなったか permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>どうなったか</h4>\n<ul>\n<li>Lighthouse のスコアはかなり改善した。\nインタラクティブタイムとブロッキングタイムが今後の課題で、CSS サイズの縮小やモバイル用のバンドルも検討している。</li>\n</ul>\n<hr>\n<h3 id=\"upgrading-devtools-architecture-to-the-modern-web\" style=\"position:relative;\"><a href=\"#upgrading-devtools-architecture-to-the-modern-web\" aria-label=\"upgrading devtools architecture to the modern web permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://youtu.be/BHogHiiyuQk\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Upgrading DevTools' architecture to the modern web</a></h3>\n<ul>\n<li>共有者: @toshi__toma</li>\n</ul>\n<p>2020 年の Chrome DevSummit の動画で、Chrome DevTools が取り組んだアーキテクチャの移行についての動画。</p>\n<p>取り組んだもの</p>\n<ul>\n<li>\n<p>モジュールシステム</p>\n<ul>\n<li>Custom Module System を JavaScript Modules へ</li>\n</ul>\n</li>\n<li>\n<p>型システム</p>\n<ul>\n<li>Closure Compiler を TypeScript Compiler へ</li>\n</ul>\n</li>\n<li>\n<p>ビルドシステム</p>\n<ul>\n<li>Python Scripts を Rollup へ</li>\n</ul>\n</li>\n<li>\n<p>コンポーネント</p>\n<ul>\n<li>独自の Custom Components を Web Components へ</li>\n</ul>\n</li>\n</ul>\n<p>DevTools は、大規模で歴史の長い Web アプリケーションなので、それらの移行をどのように進めたのか、移行での学びなどがまとまってる。\n移行の計画・実施・管理の 3 つについて説明されていて、とても参考になるものが多かったです。</p>\n<hr>","frontmatter":{"title":"Cybozu Frontend Monthly","date":"2021-01-26T17:00:00+09:00","no":7,"connpass":"https://cybozu.connpass.com/event/202029/","streamUrl":"https://www.youtube.com/watch?v=MMFzKjIzdRA","hashTag":null,"members":[{"name":"@koba04","link":"https://twitter.com/koba04"},{"name":"@pirosikick","link":"https://twitter.com/pirosikick"},{"name":"@toshi__toma","link":"https://twitter.com/toshi__toma"},{"name":"@zaki___yama","link":"https://twitter.com/zaki___yama"},{"name":"@__sakito__","link":"https://twitter.com/__sakito__"},{"name":"@shisama_","link":"https://twitter.com/shisama_"},{"name":"@nakajmg","link":"https://twitter.com/nakajmg"},{"name":"@b4h0_c4t","link":"https://twitter.com/b4h0_c4t"},{"name":"@__sosukesuzuki","link":"https://twitter.com/__sosukesuzuki"}],"guest":null}}},"pageContext":{"id":"c5f78b62-3561-5b91-9d9d-d6dd436336c5"}},"staticQueryHashes":["764694655"]}