---
import TimelineLayout from "../../layouts/TimelineLayout.astro"
import Timeline from "../../components/Timeline.astro"
import TimelineMobile from "../../components/TimelineMoblie.astro"
import BannerImage from "../../assets/2023_banner.png"
import { getCollection } from "astro:content"
import type { CollectionEntry } from "astro:content"

export interface Props {
  lookback: CollectionEntry<"lookback">
}

type Topic = CollectionEntry<"lookback">["data"][number]

export type TopicByMonth = {
  month: string
  topics: Topic[]
  notableTopics: Topic[]
}

const createTopicsByMonth = (topics: Topic[]): TopicByMonth[] => {
  const topicsByMonth: TopicByMonth[] = []
  topics.forEach(topic => {
    const month = topic.date.slice(5, 7)
    const monthIndex = topicsByMonth.findIndex(t => t.month === month)
    // 愚直なコードでごめんね
    if (monthIndex === -1 && topic.isNotable) {
      topicsByMonth.push({ month, notableTopics: [topic], topics: [] })
    }
    if (monthIndex === -1 && !topic.isNotable) {
      topicsByMonth.push({ month, notableTopics: [], topics: [topic] })
    }
    if (monthIndex !== -1 && topic.isNotable) {
      topicsByMonth[monthIndex].notableTopics.push(topic)
    }
    if (monthIndex !== -1 && !topic.isNotable) {
      topicsByMonth[monthIndex].topics.push(topic)
    }
  })
  return topicsByMonth
}

const sortByDate = (topics: TopicByMonth[]): TopicByMonth[] => {
  // 愚直なコードでごめんね
  topics.forEach(topic => {
    topic.topics.sort((a, b) => {
      if (a.date > b.date) return 1
      if (a.date < b.date) return -1
      return 0
    })

    topic.notableTopics.sort((a, b) => {
      if (a.date > b.date) return 1
      if (a.date < b.date) return -1
      return 0
    })
  })
  return topics
}

export const getStaticPaths = async () => {
  const collection = await getCollection("lookback")

  return collection?.map(item => {
    return {
      params: { slug: item.id },
      props: { lookback: item },
    }
  })
}

const { lookback } = Astro.props
const topicsByMonth = createTopicsByMonth(lookback.data)
const topics = sortByDate(topicsByMonth)
---

<TimelineLayout title="Cybozu Frontend Monthly">
  <main class="main">
    <header class="header">
      <h1>
        <img
          class="header-image"
          src={BannerImage.src}
          alt="2023年のフロントエンドトピックまとめ"
          width={800}
        />
      </h1>
    </header>
    <Timeline topics={topics} />
    <TimelineMobile topics={topics} />
  </main>
</TimelineLayout>

<style lang="scss">
  .main {
    padding: 0 2rem;

    @media screen and (max-width: 420px) {
      padding: 0 0.6rem;
    }
  }
  .header {
    display: grid;
    place-items: center;
    box-sizing: border-box;
    height: 400px;
    border-bottom: 2px solid var(--color-surface-mixed-200);
    margin-bottom: 20px;

    @media screen and (max-width: 850px) {
      height: 160px;
    }

    @media screen and (max-width: 450px) {
      height: 120px;
    }
  }

  .header-image {
    @media screen and (max-width: 850px) {
      width: 400px;
    }

    @media screen and (max-width: 450px) {
      width: 300px;
    }
  }
</style>
